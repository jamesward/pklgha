module pklgha.GitHubActionDocker

import "GitHubAction.pkl"

typealias Arch = "amd64" | "aarch64"

function buildPushJob(arch: Arch, context: String?, file: String?): GitHubAction.Job = new {
  `runs-on` = if (arch == "amd64") "ubuntu-24.04" else if (arch == "aarch64") "ubuntu-24.04-arm" else throw("unsupported architecture")
  steps {
    GitHubAction.stepCheckout

    new {
      uses = "docker/login-action@v3"
      with {
        ["registry"] = "ghcr.io"
        ["username"] = "${{ github.actor }}"
        ["password"] = "${{ secrets.GITHUB_TOKEN }}"
      }
    }
    new {
      id = "meta"
      uses = "docker/metadata-action@v5"
      with {
        ["images"] = "ghcr.io/${{ github.repository }}"
        ["tags"] = """
          type=sha,suffix=-\(arch)
          type=raw,value=latest-\(arch),enable={{is_default_branch}}
          """
      }
    }
    new {
      uses = "docker/setup-buildx-action@v3"
    }
    new {
      uses = "docker/build-push-action@v6"
      with {
        ["platforms"] = if (arch == "amd64") "linux/amd64" else if (arch == "aarch64") "linux/arm64/v8" else null
        ["context"] = context
        ["file"] = file.ifNonNull((f) -> "\(context ?? ".")/\(f)")
        ["push"] = "${{ github.actor == github.repository_owner }}"
        ["tags"] = "${{ steps.meta.outputs.tags }}"
        ["labels"] = "${{ steps.meta.outputs.labels }}"
      }
    }
  }
}

function create(target: String, from: Listing<String>): GitHubAction.Job = new {
  steps {
    new {
      uses = "docker/login-action@v3"
      with {
        ["registry"] = "ghcr.io"
        ["username"] = "${{ github.actor }}"
        ["password"] = "${{ secrets.GITHUB_TOKEN }}"
      }
    }
    new {
      id = "meta"
      uses = "docker/metadata-action@v5"
      with {
        ["images"] = "ghcr.io/${{ github.repository }}"
        ["tags"] = "type=sha"
      }
    }
    new {
      uses = "docker/setup-buildx-action@v3"
    }
    new {
      run = """
        docker buildx imagetools create \\
          -t \(target) \\
          \(from.join(" "))
        """
    }
  }
}
